function ADIParametricSearch = importfile(filename, dataLines)
%IMPORTFILE Import data from a text file
%  ADIPARAMETRICSEARCH = IMPORTFILE(FILENAME) reads data from text file
%  FILENAME for the default selection.  Returns the data as a table.
%
%  ADIPARAMETRICSEARCH = IMPORTFILE(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  ADIParametricSearch = importfile("/work/Sensors/ADIParametricSearch.csv", [3, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 12-Aug-2019 15:03:18

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [3, Inf];
end

%% Setup the Import Options
opts = delimitedTextImportOptions("NumVariables", 54);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["Part", "Package", "Vsmin", "Vsmax", "PackageSizemmtyp", "Interface", "SpecialFeatures", "Istyp", "DeviceSensors", "AccelerometerAxistoAxisAlignmenttyp", "GOffsetTempcotyp", "AccelerometerNonLinearitytyp", "AccelerometerSensitivityTempcotyp", "AccelerometerVelocityRandomWalktyp", "GyroBiasTempcotyp", "GyroSensitivityRepeatabilitymax", "GyroNonLinearitytyp", "GyroSensitivityTempcotyp", "NoiseDensitytyp", "AccelerometerOutputTotalNoisetyp", "GyroOutputTotalNoisetyp", "AccelerometerBWtyp", "SensorPrimaryFunction", "AccelerometerBiasRepeatabilitytyp", "AccelerometerSensitivityRepeatabilitymax", "GyroBWtyp", "GyroBiasoverTemptyp", "GyroSensitivityoverTemptyp", "AccelerometerSensitivityoverTemptyp", "AccelerometerBiasOverTemptyp", "Price100499", "ProductDescription", "Status", "ExportClassification", "Automotive", "ReliabilityLevel", "TempRange", "PackageArea", "PackageHeight", "LaunchDate", "EP", "DegreesofFreedom", "GyroInputRangemin", "GyroInRunBiasStabilitytyp", "GyroAngularRandomWalktyp", "GyroNoiseDensitytyp", "GyroLinearGtyp", "GyroAxistoAxisAlignmenttyp", "GyroBiasRepeatabilitytyp", "AccelRange", "AccelInRunBiasStabilitytyp", "CalibratedTempRange", "OutputSampleRatemax", "Price1000"];
opts.VariableTypes = ["string", "categorical", "double", "double", "categorical", "categorical", "categorical", "double", "categorical", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "categorical", "double", "double", "double", "double", "double", "double", "double", "double", "categorical", "categorical", "categorical", "categorical", "string", "categorical", "string", "string", "datetime", "categorical", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "categorical", "double", "double"];
opts = setvaropts(opts, 40, "InputFormat", "yyyy-MM-dd");
opts = setvaropts(opts, [1, 36, 38, 39], "WhitespaceRule", "preserve");
opts = setvaropts(opts, 50, "TrimNonNumeric", true);
opts = setvaropts(opts, 50, "ThousandsSeparator", ",");
opts = setvaropts(opts, [1, 2, 5, 6, 7, 9, 23, 32, 33, 34, 35, 36, 37, 38, 39, 41, 52], "EmptyFieldRule", "auto");
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
ADIParametricSearch = readtable(filename, opts);

end